AWSTemplateFormatVersion: 2010-09-09
Description: >
  Este template despliega una base de datos PostgreSQL en AWS RDS, 
  optimizada para operar dentro de los límites de la capa gratuita (Free Tier).
  Crea una VPC con dos subredes privadas distribuidas en zonas de disponibilidad distintas,
  configura conectividad pública mediante un Internet Gateway para habilitar acceso externo controlado,
  y establece un grupo de seguridad que permite conexiones al puerto 5432 exclusivamente desde una IP específica.
  La instancia RDS se lanza con 10 GB de almacenamiento en clase db.t4g.micro,
  sin backups automáticos ni protección contra eliminación, para facilitar pruebas de bases de datos OLTP
  desde clientes externos como DBeaver.

# -----------------------------
# Parámetros de entrada
# -----------------------------
Parameters:
  DBName:
    Description: Nombre de la base de datos a crear.
    Type: String
    Default: 'mydatabase'
  DBUsername:
    Description: Nombre del usuario administrador de la base de datos.
    Type: String
    Default: 'DBadmin'
  DBPassword:
    Description: Contraseña para el usuario administrador.
    Type: String
    NoEcho: true
  DBAllocatedStorage:
    Description: Tamaño de almacenamiento en GB para la base de datos (Capa gratuita máximo 20GB BD+Backups).
    Type: Number
    Default: 10
    MinValue: 10
    MaxValue: 1024  # Si se desea escalar mas allá de la capa gratuita
  VpcCIDR:
    Description: CIDR a asignar a la VPC.
    Type: String
    Default: '10.0.0.0/16'
  PublicSubnet1CIDR:
    Description: CIDR para la primera subred pública.
    Type: String
    Default: '10.0.1.0/24'
  PublicSubnet2CIDR:
    Description: CIDR para la segunda subred pública.
    Type: String
    Default: '10.0.2.0/24'
  AllowedIP:
    Description: Rango de IPs que tendrán acceso a la base de datos (Por seguridd pon tú IP x.x.x.x/32. Si deseas acceso global pon 0.0.0.0/0)
    Type: String
# -----------------------------
# Recursos a crear
# -----------------------------
Resources:
  # Creación de la VPC principal
  RDSVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: RDSVPC

  # Creación de la primera subred pública
  RDSSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RDSVPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false # Para no asignar IPs públicas automáticamente
      Tags:
        - Key: Name
          Value: RDSSubnet1

  # Creación de la segunda subred pública
  RDSSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RDSVPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false # Para no asignar IPs públicas automáticamente
      Tags:
        - Key: Name
          Value: RDSSubnet2

  # Creación del Internet Gateway para habilitar la conectividad a Internet en la VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Asociación del Internet Gateway con la VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RDSVPC
      InternetGatewayId: !Ref InternetGateway

  # Creación de la tabla de rutas para las subredes públicas
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RDSVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Configuración de la ruta para dirigir todo el tráfico 0.0.0.0/0 hacia el Internet Gateway
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Asociación de la tabla de rutas a la primera subred pública
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RDSSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Asociación de la tabla de rutas a la segunda subred pública
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RDSSubnet2
      RouteTableId: !Ref PublicRouteTable


  # Grupo de seguridad que permite el acceso a la base de datos PostgreSQL en el puerto 5432
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acceso restringido a RDS base de datos PostgreSQL
      VpcId: !Ref RDSVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !Ref AllowedIP
      Tags:
        - Key: Name
          Value: RDSSecurityGroup
  # Grupo de subredes para RDS, se requieren al menos dos subredes en AZs diferentes
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group para RDS PostgreSQL
      SubnetIds:
        - !Ref RDSSubnet1
        - !Ref RDSSubnet2
      DBSubnetGroupName: rds-subnet-group
# Instancia RDS PostgreSQL utilizando una instancia db.t4g.micro (compatible con la capa gratuita)
  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: rds-postgres-demo
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: db.t4g.micro
      Engine: postgres
      EngineVersion: 17.2
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId
      DBSubnetGroupName: !Ref RDSSubnetGroup
      PubliclyAccessible: true     # Hacer la instancia accesible públicamente
      BackupRetentionPeriod: 0     # Desactivado poner 0, capa gratuita hasta 7 dias sin superar 20GB BD+Backup
      DeleteAutomatedBackups: true # Elimina backups automáticos para cumplir con la capa gratuita
      DeletionProtection: false    # Deshabilita protección contra eliminación para facilitar pruebas
      StorageType: gp2             # Tipo de almacenamiento general (SSD)
      MultiAZ: false               # Desactivar Multi-AZ para cumplir con la capa gratuita

      AutoMinorVersionUpgrade: true
      Tags:
        - Key: Name
          Value: FreeTierRDS
    Metadata:
      Comment: >
        Este recurso crea una instancia de RDS PostgreSQL en una instancia db.t4g.micro, 
        garantizando compatibilidad con la capa gratuita de AWS.


# -----------------------------
# Salidas (Outputs)
# -----------------------------
Outputs:
  DBEndpoint:
    Description: "Endpoint de la base de datos PostgreSQL"
    Value: !GetAtt RDSInstance.Endpoint.Address
  DBInstanceIdentifier:
    Description: "Identificador de la instancia RDS"
    Value: !Ref RDSInstance
  RDSVPCId:
    Description: ID de la VPC creada
    Value: !Ref RDSVPC
