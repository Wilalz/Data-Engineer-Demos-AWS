AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Infraestructura robusta con EC2, VPC, Subnet, EBS, Security Group,
  IAM Role con privilegios mínimos, y configuración inicial (UserData).

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR para la VPC

  SubnetCIDR:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR para la Subnet

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Zona de disponibilidad

  InstanceType:
    Type: String
    Default: t2.micro
    Description: Tipo de instancia EC2

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Nombre del par de llaves EC2 (SSH)

Resources:

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref SubnetCIDR
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
        - Key: Name
          Value: MySubnet

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acceso SSH y HTTP
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: EC2SecurityGroup

  MyInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Tags:
        - Key: Name
          Value: EC2InstanceRole

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref MyInstanceRole

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref MySubnet
      SecurityGroupIds:
        - !Ref MySecurityGroup
      IamInstanceProfile: !Ref MyInstanceProfile
      Tags:
        - Key: Name
          Value: EC2Instance
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            DeleteOnTermination: true
        # Se comenta el segundo volumen EBS para no incurrir en costos adicionales    
        #- DeviceName: /dev/sdf
        #  Ebs:
        #    VolumeSize: 8
        #    DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          yum install -y awscli
          mkfs -t xfs /dev/xvdf
          mkdir /data
          mount /dev/xvdf /data
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hola desde $(hostname)</h1>" > /var/www/html/index.html

Outputs:
  InstanceId:
    Description: ID de la instancia EC2
    Value: !Ref MyEC2Instance

  VPCId:
    Description: ID de la VPC creada
    Value: !Ref MyVPC

  SubnetId:
    Description: ID de la Subnet creada
    Value: !Ref MySubnet

  SecurityGroupId:
    Description: ID del grupo de seguridad
    Value: !Ref MySecurityGroup
